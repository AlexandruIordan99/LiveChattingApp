services:
  postgres:
    container_name: postgres-sql-lap
    image: postgres:17 #taken from DockerHub
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pass
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: LiveChattingAppDB
    volumes:
      - postgres:/data/postgres
    ports:
      - 5432:5432
    networks:
      - spring-demo
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 3

  mail-dev:
    container_name: mail-dev-lap
    image: maildev/maildev
    ports:
    - 1080:1080 #web service
    - 1025:1025 #SMTP
    networks:
      - spring-demo



  spring-app:
    container_name: spring-app-lvc
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8100:8100
    networks:
      - spring-demo
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/LiveChattingAppDB

networks:
  spring-demo:
    driver: bridge #bridges connections between containers on this network

volumes:
  postgres:
    driver: local
  keycloak:
    driver: local